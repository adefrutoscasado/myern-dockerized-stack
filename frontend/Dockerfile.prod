# Production environment

FROM node:12-alpine as build

# Do not use 'COPY . .' to copy all files, as some are only needed in the final image.
# Copying all files will force a build even if no client files have been modified

# Install
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY package.json ./
COPY sync-package-lock ./
RUN npm clean-install

# Build
COPY src ./src
COPY public ./public
COPY .eslintrc.js ./
COPY tsconfig.json ./
COPY webpack.config.ts ./
RUN npm run build

# Nginx proxy to serve /api and build from same port
FROM nginx:stable-alpine
COPY ./nginx/nginx.conf /etc/nginx/conf.d/default.conf
COPY --from=build /app/build /usr/share/nginx/html
EXPOSE 80
