# TODO: Clean

# build environment
FROM node:12-alpine as build

WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
ENV NODE_OPTIONS=--max_old_space_size=4096
ARG PUBLIC_URL
COPY package.json ./
COPY sync-package-lock ./

RUN apk add --no-cache python2 make gcc g++
RUN npm clean-install
# Do not use 'COPY . .' to copy all files, as some are only needed in the final image.
# Copying all files will force a build even if no client files have been modified
COPY src ./src
COPY public ./public
COPY .eslintrc.js ./

RUN npm run build

# production environment (final image)
FROM nginx:stable-alpine
COPY --from=build /app/build /usr/share/nginx/html
# new
COPY ./nginx.conf.template /etc/nginx/templates/default.conf.template
COPY ./configure-frontend.sh /docker-entrypoint.d/99-configure-frontend.sh
RUN chmod +x /docker-entrypoint.d/99-configure-frontend.sh
EXPOSE 80
